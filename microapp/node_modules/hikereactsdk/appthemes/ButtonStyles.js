import AppTheme from './AppTheme'
import ColorUtils from './ColorUtils'

let styles;

/**
 * This class defines all button profiles based on app theme colors
 * Each button profile state the default color , pressed opacity and selected color which will be used at runtime to color the buttons
 */
class ButtonStyles {

	/**
	 * Initializes styles object with all the button profiles based on app theme colors.
	 */
	static initStyles() {
		var isNightTheme = AppTheme.isNightTheme();
		var isZenTheme = AppTheme.isZenTheme();
		styles = {
			ButtonProfile01: {
				defaultColor: AppTheme.getColorPalette().backgroundColor,
				pressedOpacity: 0.5
			},
			ButtonProfile02: {
				defaultColor: AppTheme.getColorPalette().accentColor,
				pressedOpacity: 0.5,
			},
			ButtonProfile03: {
				defaultColor: AppTheme.getColorPalette().accentColor,
				pressedOpacity: 0.5,
			},
			ButtonProfile04: {
				defaultColor: AppTheme.getColorPalette().backgroundColor,
				pressedOpacity: 0.5,
			},
			ButtonProfile05: {
				defaultColor: AppTheme.getColorPalette().accentColor,
				pressedOpacity: 0.5,
				selectedColor: isNightTheme ? AppTheme.getColorPalette().hintColor : (isZenTheme ? AppTheme.getColorPalette().secondaryColor : AppTheme.getColorPalette().accentColor)
			},
			ButtonProfile06: {
				defaultColor: AppTheme.getColorPalette().accentColor,
				pressedOpacity: 0.5,
				selectedColor: AppTheme.getColorPalette().accentColor
			},
			ButtonProfile07: {
				defaultColor: AppTheme.getColorPalette().accentColor,
				pressedOpacity: 0.5,
				selectedColor: AppTheme.getColorPalette().accentColor
			},
			ButtonProfile08: {
				defaultColor: AppTheme.getColorPalette().hint,
				pressedOpacity: 0.5,
				selectedColor: AppTheme.getColorPalette().accentColor
			},
			ButtonProfile09: {
				defaultColor: AppTheme.getColorPalette().supportive5Color,
				pressedOpacity: 0.5
			},
			ButtonProfile10: {
				defaultColor: AppTheme.getColorPalette().supportive6Color,
				pressedOpacity: 0.5,
			},
			ButtonProfile11: {
				defaultColor: AppTheme.getColorPalette().hintColor,
				pressedOpacity: 0.5,
				selectedColor: AppTheme.getColorPalette().accentColor
			},
			ButtonProfile12: {
				defaultColor: AppTheme.getColorPalette().mainColor,
			},
			ButtonProfile13: {
				defaultColor: AppTheme.getColorPalette().hintColor,
				selectedColor: AppTheme.getColorPalette().hintColor
			},
			ButtonProfile14: {
				defaultColor: AppTheme.getColorPalette().tertiaryColor,
				pressedOpacity: 0.5,
			},
			ButtonProfile15: {
				defaultColor: AppTheme.getColorPalette().chipsFgColor,
				pressedOpacity: 0.5,
			},
			ButtonProfile16: {
				defaultColor: AppTheme.getColorPalette().transBgColor,
				selectedColor: AppTheme.getColorPalette().transBgColor
			},
			ButtonProfile17: {
				defaultColor: ColorUtils.getColorWithOpacity(AppTheme.getColorPalette().backgroundColor, 0.04),
				pressedOpacity: 0.25,
				selectedColor: ColorUtils.getColorWithOpacity(AppTheme.getColorPalette().backgroundColor, 0.25)
			},
			ButtonProfile18: {
				defaultColor: AppTheme.getColorPalette().backgroundColor,
				selectedColor: AppTheme.getColorPalette().backgroundColor
			},
			ButtonProfile19: {
				defaultColor: AppTheme.getColorPalette().separatorColor,
				selectedColor: AppTheme.getColorPalette().separatorColor
			}
		}
	}

	/**
	 * Returns a styles object which contains all the button profiles.
	 */
	static getStyles() {
		return styles;
	}
}

export default ButtonStyles;