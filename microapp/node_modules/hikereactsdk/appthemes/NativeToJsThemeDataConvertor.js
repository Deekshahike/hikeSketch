import ColorUtils from './ColorUtils';

/**
 * This class converts the color props received in init props to react JS equivalent
 */
class NativeToJsThemeDataConvertor {

  /**
   * Returns the color palette object which contains all app theme colors.
   */
  static getColorPalette(colorProps) {
    var colorPalette = {
      backgroundColor: ColorUtils.convertThemeColor(colorProps.backgroundColor),
      mainColor: ColorUtils.convertThemeColor(colorProps.mainColor),
      secondaryColor: ColorUtils.convertThemeColor(colorProps.secondaryColor),
      tertiaryColor: ColorUtils.convertThemeColor(colorProps.tertiaryColor),
      hintColor: ColorUtils.convertThemeColor(colorProps.hintColor),
      separatorColor: ColorUtils.convertThemeColor(colorProps.separatorColor),
      accentColor: ColorUtils.convertThemeColor(colorProps.accentColor),
      errorColor: ColorUtils.convertThemeColor(colorProps.errorColor),
      activeColor: ColorUtils.convertThemeColor(colorProps.activeColor),
      chatBgColor: ColorUtils.convertThemeColor(colorProps.chatBgColor),
      //inputBgColor: ColorUtils.convertThemeColor(colorProps.inputBgColor),
      chipsFgColor: ColorUtils.convertThemeColor(colorProps.chipsFgColor),
      chipsBgColor: ColorUtils.convertThemeColor(colorProps.chipsBgColor),
      toastBgColor: ColorUtils.convertThemeColor(colorProps.toastBgColor),
      sdrReceiveColor: ColorUtils.convertThemeColor(colorProps.sdrReceiveColor),
      sdrSentColor: ColorUtils.convertThemeColor(colorProps.sdrSentColor),
      chatHeadColor: ColorUtils.convertThemeColor(colorProps.chatHeadColor),
      chatThemeColor: ColorUtils.convertThemeColor(colorProps.chatThemeColor),
      bubbleBgColor: ColorUtils.convertThemeColor(colorProps.bubbleBgColor),
      timestampColor: ColorUtils.convertThemeColor(colorProps.timestampColor),
      transBgColor: ColorUtils.convertThemeColor(colorProps.transBgColor),
      halfBgColor: ColorUtils.convertThemeColor(colorProps.halfBgColor),
      profileBgColor: ColorUtils.convertThemeColor(colorProps.profileBgColor),
      //stickerPaletteColor: ColorUtils.convertThemeColor(colorProps.stickerPaletteColor),
      timeSdrColor: ColorUtils.convertThemeColor(colorProps.timeSdrColor),

      supportive1Color: ColorUtils.convertThemeColor(colorProps.supportive1Color),
      supportive2Color: ColorUtils.convertThemeColor(colorProps.supportive2Color),
      supportive3Color: ColorUtils.convertThemeColor(colorProps.supportive3Color),
      supportive4Color: ColorUtils.convertThemeColor(colorProps.supportive4Color),
      supportive5Color: ColorUtils.convertThemeColor(colorProps.supportive5Color),
      supportive6Color: ColorUtils.convertThemeColor(colorProps.supportive6Color),
      supportive7Color: ColorUtils.convertThemeColor(colorProps.supportive7Color),
      supportive8Color: ColorUtils.convertThemeColor(colorProps.supportive8Color),

      //taskDescriptionBgColor: ColorUtils.convertThemeColor(colorProps.taskDescriptionBgColor),
      //chatThreadStatusBgColor: ColorUtils.convertThemeColor(colorProps.chatThreadStatusBgColor),
      //statusBarColor: ColorUtils.convertThemeColor(colorProps.statusBarColor),
      //receiverHighlightColor: ColorUtils.convertThemeColor(colorProps.receiverHighlightColor),
      //senderHighlightColor: ColorUtils.convertThemeColor(colorProps.senderHighlightColor)
    }
    return colorPalette;
  }
}

export default NativeToJsThemeDataConvertor;