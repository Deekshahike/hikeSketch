
import { NetInfo, Platform } from 'react-native';
import { DeviceEventEmitter } from 'react-native';

import { HikeUtils } from '../apis';

function getWrappedPromise(promise){
   return NetInfo.isConnected.fetch().then(isConnected => {
         if(isConnected){
          return promise;
         }else{
          DeviceEventEmitter.emit('noInternetConnection')
          return Promise.reject({noInternet:true});
         }
     });
}

function doUtilsGet(key, params = null) {
    return HikeUtils.doGet(key, params)
    .then((result) => {
        return (Platform.OS === 'android' ? JSON.parse(result.response) : result);
    })
}

function doUtilsPost(key, params = null) {
    return HikeUtils.doPost(key, params)
    .then((result) => {
        return (Platform.OS === 'android' ? JSON.parse(result.response) : result);
    })
}

function convertQueryParamsToString(queryParams) {
  for(var key in queryParams) {
    queryParams[key] = queryParams[key] + '';
  }
}

export default class BaseStore {

    doGet(urlKey, params) {
      if(params.queryParams) {
        convertQueryParamsToString(params.queryParams);
      }
      return getWrappedPromise(doUtilsGet(urlKey, params));
    }

    doPost(urlKey, params) {
      if(params.queryParams) {
        convertQueryParamsToString(params.queryParams);
      }
      return getWrappedPromise(doUtilsPost(urlKey, params));
    }

}
